version: '3.8'

services:
  backend:
    env_file: './backend/.env'
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DOMAIN=localhost
      - ENVIRONMENT=local
      - PROJECT_NAME=Full Stack FastAPI Project
      - STACK_NAME=full-stack-fastapi-project
      - BACKEND_CORS_ORIGINS=http://localhost,http://localhost:5173,https://localhost,https://localhost:5173,http://13.60.64.4,http://alexinhngdevops.mooo.com,https://alexinhngdevops.mooo.com,http://alexin_hng.mooo.com,https://13.60.64.4,https://alexin_hng.mooo.com
      - SECRET_KEY=changethis123
      - FIRST_SUPERUSER=devops@hng.tech
      - FIRST_SUPERUSER_PASSWORD=devops#HNG11
      - USERS_OPEN_REGISTRATION=True
      - SMTP_HOST=
      - SMTP_USER=
      - SMTP_PASSWORD=
      - EMAILS_FROM_EMAIL=info@example.com
      - SMTP_TLS=True
      - SMTP_SSL=False
      - SMTP_PORT=587
      - POSTGRES_SERVER=db
      - POSTGRES_DB=hng11devops2
      - POSTGRES_USER=alexin
      - POSTGRES_PASSWORD=freakingtired
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    env_file: './frontend/.env'

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/letsencrypt:/etc/letsencrypt
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
      - db
      - adminer
      - nginx-proxy-manager

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '8090:81' # Admin Web Port

    volumes:
      - ./proxy/data:/data
      - ./proxy/letsencrypt:/etc/letsencrypt


  db:
    image: postgres:16
    environment:
      POSTGRES_DB: hng11devops2
      POSTGRES_USER: alexin
      POSTGRES_PASSWORD: freakingtired
    volumes:
      - db_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: db

volumes:
  db_data:
  
